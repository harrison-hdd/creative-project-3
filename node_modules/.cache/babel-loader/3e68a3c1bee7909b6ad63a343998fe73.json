{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"LoginAndRegisterComponent\",\n  methods: {\n    login() {\n      let username = document.getElementById(\"username\").value;\n      let password = document.getElementById(\"password\").value;\n      let user = this.$root.$data.users.find(user => user.username === username);\n\n      if (user === undefined) {\n        alert(\"User not found! Please register\");\n        return;\n      }\n\n      if (user.password !== password) {\n        alert(\"Wrong info provided!\");\n        return;\n      }\n\n      this.$root.$data.isLoggedIn = true;\n      this.$root.$data.currentUser = username;\n      this.$root.$data.currentFavorites = this.$root.$data.savedByUsers.find(u => u.username === username).favorites;\n      document.getElementById(\"username\").value = \"\";\n      document.getElementById(\"password\").value = \"\";\n    },\n\n    register() {\n      let newUsername = document.getElementById(\"username\").value;\n      let newPassword = document.getElementById(\"password\").value;\n\n      if (newUsername === \"\" || newPassword === \"\") {\n        alert(\"Username and password cannot be blank\");\n        return;\n      }\n\n      let user = this.$root.$data.users.find(user => user.username === newUsername);\n\n      if (user !== undefined) {\n        alert(\"User already exists!\");\n        return;\n      }\n\n      this.$root.$data.users.push({\n        username: newUsername,\n        password: newPassword\n      });\n      this.$root.$data.savedByUsers.push({\n        username: newUsername,\n        favorites: []\n      });\n      alert(\"New user successfully registered\");\n    },\n\n    logout() {\n      this.$root.$data.savedByUsers.find(u => u.username === this.$root.$data.currentUser).favorites = this.$root.$data.currentFavorites; //save favs before logging out\n\n      this.$root.$data.currentUser = \"\";\n      this.$root.$data.currentFavorites = [];\n      this.$root.$data.currentDate = \"\";\n      this.$root.$data.isLoggedIn = false;\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AAuBA;AACAA,mCADA;AAEAC;AACAC;AACA;AACA;AACA,6CACAC,kCADA;;AAGA;AACAC;AACA;AACA;;AACA;AACAA;AACA;AACA;;AACA;AACA;AACA,6EACAC,4BADA,EAEAC,SAFA;AAIAC;AACAA;AACA,KAvBA;;AAwBAC;AACA;AACA;;AACA;AACAJ;AACA;AACA;;AACA,6CACAD,qCADA;;AAGA;AACAC;AACA;AACA;;AACA;AACAK,6BADA;AAEAC;AAFA;AAIA;AACAD,6BADA;AAEAH;AAFA;AAIAF;AACA,KA/CA;;AAgDAO;AACA,yCACAN,gDADA,EAEAC,SAFA,GAEA,iCAFA,CADA,CAGA;;AAEA;AACA;AACA;AACA;AACA;;AAzDA;AAFA","names":["name","methods","login","user","alert","u","favorites","document","register","username","password","logout"],"sourceRoot":"src/components","sources":["LoginAndRegisterComponent.vue"],"sourcesContent":["<template>\n  <div id=\"login-page\">\n    <div id=\"input\" v-show=\"!this.$root.$data.isLoggedIn\">\n      <div id=\"username-wrapper\">\n        <input type=\"text\" id=\"username\" placeholder=\"Username\" />\n      </div>\n      <div></div>\n      <div id=\"password-wrapper\">\n        <input type=\"password\" id=\"password\" placeholder=\"Password\" />\n      </div>\n      <button id=\"login-button\" @click=\"login\">Login</button>\n      <button id=\"register-button\" @click=\"register\">Register</button>\n    </div>\n    <div v-show=\"this.$root.$data.isLoggedIn\">\n      You are logged in. Enjoy browsing\n      <div>\n        <button id=\"logout-button\" @click=\"logout\">Logout</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"LoginAndRegisterComponent\",\n  methods: {\n    login() {\n      let username = document.getElementById(\"username\").value;\n      let password = document.getElementById(\"password\").value;\n      let user = this.$root.$data.users.find(\n        (user) => user.username === username\n      );\n      if (user === undefined) {\n        alert(\"User not found! Please register\");\n        return;\n      }\n      if (user.password !== password) {\n        alert(\"Wrong info provided!\");\n        return;\n      }\n      this.$root.$data.isLoggedIn = true;\n      this.$root.$data.currentUser = username;\n      this.$root.$data.currentFavorites = this.$root.$data.savedByUsers.find(\n        (u) => u.username === username\n      ).favorites;\n\n      document.getElementById(\"username\").value = \"\";\n      document.getElementById(\"password\").value = \"\";\n    },\n    register() {\n      let newUsername = document.getElementById(\"username\").value;\n      let newPassword = document.getElementById(\"password\").value;\n      if (newUsername === \"\" || newPassword === \"\") {\n        alert(\"Username and password cannot be blank\");\n        return;\n      }\n      let user = this.$root.$data.users.find(\n        (user) => user.username === newUsername\n      );\n      if (user !== undefined) {\n        alert(\"User already exists!\");\n        return;\n      }\n      this.$root.$data.users.push({\n        username: newUsername,\n        password: newPassword,\n      });\n      this.$root.$data.savedByUsers.push({\n        username: newUsername,\n        favorites: [],\n      });\n      alert(\"New user successfully registered\");\n    },\n    logout() {\n      this.$root.$data.savedByUsers.find(\n        (u) => u.username === this.$root.$data.currentUser\n      ).favorites = this.$root.$data.currentFavorites; //save favs before logging out\n\n      this.$root.$data.currentUser = \"\";\n      this.$root.$data.currentFavorites = [];\n      this.$root.$data.currentDate = \"\";\n      this.$root.$data.isLoggedIn = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\n#login-page {\n  margin-top: 125px;\n}\n#username-wrapper,\n#password-wrapper {\n  margin-bottom: 20px;\n}\n\n#username,\n#password {\n  border: 2px solid gray;\n}\n\n#login-button,\n#register-button {\n  margin: 0 10px;\n}\n\n#logout-button {\n  margin: 20px 10px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}